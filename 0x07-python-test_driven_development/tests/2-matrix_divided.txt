Using ``matrix_divided``

import ``matrix_divided``

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided


Basic division of matrix:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

another elements in the duplas of matrix:
    >>> matrix = [['h', 'o', 'l'], ['b', 5, 6]]
    >>> print(matrix_divided(matrix, 5))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Zero "div" input:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Different list length in matrix input:
    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

div not is a number
    
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, hola))
    Traceback (most recent call last):
    ...
    NameError: name 'hola' is not defined


No input:
    >>> print(matrix_divided())
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

print result rounded to 2
    >>> matrix = [[1.234, 2, 3], [4.5678, 5, 6]]
    >>> print(matrix_divided(matrix, 13))
    [[0.09, 0.15, 0.23], [0.35, 0.38, 0.46]]



